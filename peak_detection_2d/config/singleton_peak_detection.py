from yacs.config import CfgNode as ConfigurationNode

__C = ConfigurationNode()

# importing default as a global singleton
peak_detection_cfg = __C
__C.DESCRIPTION = "Default config from the Singleton"
__C.OUTPUT_PARENT_PATH = "/cmnfs/proj/ORIGINS/data/brain/FreshFrozenBrain/SingleShot/DDA/frame0_1830_ssDDA_P064428_Fresh1_5ug_R1_BD5_1_4921_ScanByScan_RTtol0.9_threshold_missabthres0.5_convergence_NoIntercept_pred_mzBinDigits2_imPeakWidth4_deltaMobilityThres80/2d_peak_selection/"
__C.CONFIG_PATH = ""
__C.REMOVE_CONFIG_AFTER_RUN = True
__C.RESUME_PATH = ""
__C.DEBUG = False
__C.EVAL_ON_TEST = True
__C.OUTPUT_FOLDER_NAME = None

__C.PREPARE_DATASET = ConfigurationNode()
__C.PREPARE_DATASET.RESULT_PATH = ""
__C.PREPARE_DATASET.N_BLOCKS_BY_PEPT = 2
__C.PREPARE_DATASET.DICT_PICKLE_PATH = ""
__C.PREPARE_DATASET.N_WORKERS = 4  # <= 0 means using all available CPUs


__C.DATASET = ConfigurationNode()
__C.DATASET.PADDING_SHAPE = (258, 258)
__C.DATASET.INPUT_CHANNELS = ["normal", "log"]
__C.DATASET.USE_HINT_CHANNEL = False
__C.DATASET.TO_TENSOR = True
__C.DATASET.N_CHANNEL = 2
__C.DATASET.ONLY_LOG_CHANNEL = False
__C.DATASET.RANDOM_STATE = 42
__C.DATASET.TRAIN_VAL_SIZE = 0.9
__C.DATASET.TRAIN_SIZE = 0.9
__C.DATASET.RAW_DATA_PATH = (
    "/cmnfs/proj/ORIGINS/data/brain/FreshFrozenBrain/SingleShot/DDA/"
)
__C.DATASET.ACTIVATION_PATH = "frame0_1830_ssDDA_P064428_Fresh1_5ug_R1_BD5_1_4921_ScanByScan_RTtol0.9_threshold_missabthres0.5_convergence_NoIntercept_pred_mzBinDigits2_imPeakWidth4_deltaMobilityThres80"
__C.DATASET.MODEL_DATA_PATH = "peak_detection_mask_data"

__C.DATASET.TRAIN_BATCH_SIZE = 256
__C.DATASET.VAL_BATCH_SIZE = 512
__C.DATASET.TEST_BATCH_SIZE = 512

__C.MODEL = ConfigurationNode()
__C.MODEL.TYPE = "mask_segmentation"
__C.MODEL.NAME = "UNET"

__C.MODEL.PARAMS = ConfigurationNode()
__C.MODEL.PARAMS.IN_CHANNELS = 2
__C.MODEL.PARAMS.FIRST_OUT_CHANNELS = 32
__C.MODEL.PARAMS.EXIT_CHANNELS = 1
__C.MODEL.PARAMS.DOWNHILL = 4
__C.MODEL.PARAMS.PADDING = 1
__C.MODEL.PARAMS.IMAGE_SIZE = 258

__C.MODEL.SOLVER = ConfigurationNode()
__C.MODEL.SOLVER.TOTAL_EPOCHS = 100
__C.MODEL.SOLVER.OPTIMIZER = ConfigurationNode()
__C.MODEL.SOLVER.OPTIMIZER.BASE_LR = 0.001
__C.MODEL.SOLVER.OPTIMIZER.NAME = "adam"
__C.MODEL.SOLVER.OPTIMIZER.WEIGHT_DECAY = 0

# sgd config
__C.MODEL.SOLVER.OPTIMIZER.SGD = ConfigurationNode()
__C.MODEL.SOLVER.OPTIMIZER.SGD.MOMENTUM = 0.9
__C.MODEL.SOLVER.OPTIMIZER.SGD.NESTEROV = False

# LR scheduler config
__C.MODEL.SOLVER.SCHEDULER = ConfigurationNode()
__C.MODEL.SOLVER.SCHEDULER.NAME = "reduce_on_plateau"
__C.MODEL.SOLVER.SCHEDULER.PATIENCE = 3
__C.MODEL.SOLVER.SCHEDULER.MIN_LR = 0.00000001
__C.MODEL.SOLVER.SCHEDULER.LR_REDUCE_GAMMA = 0.1
__C.MODEL.SOLVER.SCHEDULER.FACTOR = 0.1

# OneCycleLR hyperparams
__C.MODEL.SOLVER.SCHEDULER.PCT_START = 0.3
__C.MODEL.SOLVER.SCHEDULER.ANNEAL_STRATEGY = "cos"
__C.MODEL.SOLVER.SCHEDULER.DIV_FACTOR = 25
__C.MODEL.SOLVER.SCHEDULER.MAX_LR = 0.01

# Loss
__C.MODEL.SOLVER.LOSS = ConfigurationNode()
__C.MODEL.SOLVER.LOSS.NAME = "ComboLoss"
__C.MODEL.SOLVER.LOSS.LOSSTYPES = ["bce", "wdice", "dice", "focal"]
__C.MODEL.SOLVER.LOSS.WEIGHTS = [1, 0, 4, 1]
__C.MODEL.SOLVER.LOSS.CHANNEL_WEIGHTS = [1, 0.5]  # [normal, log, hint]
__C.MODEL.SOLVER.LOSS.PER_IMAGE = True

# focal loss related
__C.MODEL.SOLVER.LOSS.FOCAL_LOSS = ConfigurationNode()
__C.MODEL.SOLVER.LOSS.FOCAL_LOSS.GAMMA = 1
__C.MODEL.SOLVER.LOSS.FOCAL_LOSS.ALPHA = -1

__C.MODEL.SOLVER.EARLY_STOPPING = ConfigurationNode()
__C.MODEL.SOLVER.EARLY_STOPPING.PATIENCE = 10
__C.MODEL.SOLVER.EARLY_STOPPING.MODE = "max"

__C.MODEL.EVALUATION = ConfigurationNode()
__C.MODEL.EVALUATION.THRESHOLD = 0.5

# Confidence model
__C.CONFMODEL = ConfigurationNode()
__C.CONFMODEL.TYPE = "confidence_regression"
__C.CONFMODEL.NAME = "CNNEncoderRegressor"
__C.CONFMODEL.RESUME_PATH = ""
__C.CONFMODEL.DATASET_RESPLIT = False
__C.CONFMODEL.BINARY_LABEL = False

__C.CONFMODEL.PARAMS = ConfigurationNode()
__C.CONFMODEL.PARAMS.IN_CHANNELS = 1
__C.CONFMODEL.PARAMS.FIRST_OUT_CHANNELS = 16
__C.CONFMODEL.PARAMS.DOWNHILL = 5
__C.CONFMODEL.PARAMS.PADDING = 0
__C.CONFMODEL.PARAMS.IMAGE_SIZE = __C.MODEL.PARAMS.IMAGE_SIZE
__C.CONFMODEL.PARAMS.DROPOUT_RATE = 0.25
__C.CONFMODEL.PARAMS.SIGMOID_OUTPUT = False

__C.CONFMODEL.SOLVER = ConfigurationNode()
__C.CONFMODEL.SOLVER.TOTAL_EPOCHS = 100

__C.CONFMODEL.SOLVER.OPTIMIZER = ConfigurationNode()
__C.CONFMODEL.SOLVER.OPTIMIZER.BASE_LR = 0.001
__C.CONFMODEL.SOLVER.OPTIMIZER.NAME = "adam"
__C.CONFMODEL.SOLVER.OPTIMIZER.WEIGHT_DECAY = 0.0

__C.CONFMODEL.SOLVER.LOSS = ConfigurationNode()
__C.CONFMODEL.SOLVER.LOSS.NAME = "L1Loss"

__C.CONFMODEL.SOLVER.EARLY_STOPPING = ConfigurationNode()
__C.CONFMODEL.SOLVER.EARLY_STOPPING.PATIENCE = 10
__C.CONFMODEL.SOLVER.EARLY_STOPPING.MODE = "min"

# OneCycleLR hyperparams for conf model
__C.CONFMODEL.SOLVER.SCHEDULER = ConfigurationNode()
__C.CONFMODEL.SOLVER.SCHEDULER.NAME = "one_cycle"

__C.CONFMODEL.SOLVER.SCHEDULER.PATIENCE = 3
__C.CONFMODEL.SOLVER.SCHEDULER.MIN_LR = 0.00000001
__C.CONFMODEL.SOLVER.SCHEDULER.LR_REDUCE_GAMMA = 0.1
__C.CONFMODEL.SOLVER.SCHEDULER.FACTOR = 0.1

__C.CONFMODEL.SOLVER.SCHEDULER.PCT_START = 0.3
__C.CONFMODEL.SOLVER.SCHEDULER.ANNEAL_STRATEGY = "cos"
__C.CONFMODEL.SOLVER.SCHEDULER.DIV_FACTOR = 25
__C.CONFMODEL.SOLVER.SCHEDULER.MAX_LR = 0.01

__C.CONFMODEL.EVAL = ConfigurationNode()
__C.CONFMODEL.EVAL.METRIC = "MAE"  # for compatibility with the old code
